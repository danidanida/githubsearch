{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport CardList from './CardList';\nimport testData from './testData';\nimport Form from './Form';\nimport { useState } from 'react';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: []\n    };\n\n    this.addNewProfile = profileData => {\n      this.setState(prevState => ({\n        profiles: [...prevState.profiles, profileData]\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\" \", this.props.title, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modeWrapper\",\n          children: /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.addNewProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        profiles: this.state.profiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst DarkMode = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"button\", {\n    className: \"darkMode\",\n    onClick: ToggleTheme,\n    children: \"Dark\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n};\n\n_c = DarkMode;\n\nfunction ToggleTheme() {\n  _s();\n\n  const [theme, setTheme] = useState('light'); // if the theme is not light, then set it to dark\n\n  if (theme === 'light') {\n    setTheme('dark');\n    console.log('dark'); // otherwise, it should be light\n  } else {\n    setTheme('light');\n    console.log('light');\n  }\n}\n\n_s(ToggleTheme, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c2 = ToggleTheme;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DarkMode\");\n$RefreshReg$(_c2, \"ToggleTheme\");","map":{"version":3,"sources":["/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/App.js"],"names":["React","CardList","testData","Form","useState","App","Component","state","profiles","addNewProfile","profileData","setState","prevState","render","props","title","DarkMode","ToggleTheme","theme","setTheme","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACNC,MAAAA,QAAQ,EAAC;AADH,KAFuC;;AAAA,SAM/CC,aAN+C,GAM9BC,WAAD,IAAiB;AAC/B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAACJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,SAAS,CAACJ,QAAd,EAAuBE,WAAvB;AAAX,OAAL,CAAvB;AACD,KAR8C;AAAA;;AAS/CG,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,8BACP;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,wBAA0B,KAAKC,KAAL,CAAWC,KAArC,oBAA4C;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCAC5C,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAD4C;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAKL,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKN;AAArB;AAAA;AAAA;AAAA;AAAA,cALK,eAML,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cANK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASD;;AAnB8C;;AAsBjD,MAAMQ,QAAQ,GAAG,MAAM;AACvB;AAAA;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,CAFD;;KAAMD,Q;;AAIN,SAASC,WAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,OAAD,CAAlC,CADsB,CAEtB;;AACA,MAAIc,KAAK,KAAK,OAAd,EAAuB;AACrBC,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAFqB,CAGvB;AACC,GAJD,MAIO;AACLF,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF;;GAXQJ,W;;MAAAA,W","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport CardList from './CardList';\nimport testData from './testData';\nimport Form from './Form';\nimport { useState } from 'react';\nexport default class App extends React.Component {\n \n  state = {\n    profiles:[],\n  };\n  \n  addNewProfile = (profileData) => {\n    this.setState(prevState => ({profiles: [...prevState.profiles,profileData]}))\n  }\n  render() { \n    return <div>\n    <div className=\"header\"> {this.props.title} <div className=\"modeWrapper\">\n    <DarkMode/>\n    </div>\n    </div> \n      <Form onSubmit={this.addNewProfile}/>\n      <CardList profiles={this.state.profiles}/> \n      \n      </div>\n  }\n}\n\nconst DarkMode = () => {\n<button className=\"darkMode\" onClick={ToggleTheme}>Dark</button>\n};\n\nfunction ToggleTheme () {\n  const [theme, setTheme] = useState('light'); \n  // if the theme is not light, then set it to dark\n  if (theme === 'light') {\n    setTheme('dark');\n    console.log('dark')\n  // otherwise, it should be light\n  } else {\n    setTheme('light');\n    console.log('light')\n  }\n}"]},"metadata":{},"sourceType":"module"}