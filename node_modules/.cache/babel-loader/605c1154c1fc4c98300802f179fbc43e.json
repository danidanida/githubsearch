{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DarkMode = () => {\n  _s();\n\n  const [state, setState] = useState(true);\n\n  function onToggle() {\n    if (state == true) {\n      setState(false);\n    } else setState(true);\n  }\n\n  if (state === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"darkDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dark\",\n        onClick: onToggle,\n        children: \"DARK MODE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  } else return;\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"light\",\n      onClick: onToggle,\n      children: \"LIGHT MODE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DarkMode, \"VvKXSPDp4yRj5VI1Ef/r5LoZ51I=\");\n\n_c = DarkMode;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {\n    title: \"Search by Github username\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/index.js"],"names":["React","useState","ReactDOM","App","reportWebVitals","DarkMode","state","setState","onToggle","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASO,QAAT,GAAoB;AAEhB,QAAIF,KAAK,IAAI,IAAb,EAAmB;AACfC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAFD,MAEOA,QAAQ,CAAC,IAAD,CAAR;AACV;;AACD,MAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,wBAAQ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACJ;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,OAAO,EAAEE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAAR;AAIH,GALC,MAMG;;AACL;AAAE;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAEA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAAF;AAGE,CAnBF;;GAAMH,Q;;KAAAA,Q;AAqBNH,QAAQ,CAACO,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,0BACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACAP,eAAe","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst DarkMode = () => {\n  const [state, setState] = useState(true);\n\n  function onToggle() {\n\n      if (state == true) {\n          setState(false)\n      } else setState(true)\n  }\n  if (state === true) {\n    return( <div className=\"darkDiv\">\n        <button className=\"dark\" onClick={onToggle}>DARK MODE</button>\n         </div>) \n         \n} \nelse return \n( <div>\n    <button className=\"light\" onClick={onToggle}>LIGHT MODE</button>\n     </div>) \n } \n\nReactDOM.render(\n  <React.StrictMode>\n    <App title=\"Search by Github username\" />\n    <DarkMode/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}