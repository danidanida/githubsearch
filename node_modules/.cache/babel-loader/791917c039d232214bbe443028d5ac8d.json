{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport CardList from './CardList';\nimport testData from './testData';\nimport Form from './Form'; //import { useState } from 'react';\n\nimport Darkmode from './';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profiles: [],\n      theme: true\n    };\n\n    this.addNewProfile = profileData => {\n      this.setState(prevState => ({\n        profiles: [...prevState.profiles, profileData]\n      }));\n    };\n  }\n\n  /*ToggleTheme () {\n    if (theme === true) {\n      this.setState({theme:false})\n      console.log('dark')\n    }\n    else \n    this.setState({theme:true})\n    console.log('light')\n  } */\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [\" \", this.props.title, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modeWrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"darkMode\",\n            onClick: this.ToggleTheme,\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.addNewProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        profiles: this.state.profiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n/*const DarkMode = () => {\n  return ( <div>\n<button className=\"darkMode\" onClick={ToggleTheme}>Dark</button>\n</div> )\n}; */\n\n/*function ToggleTheme () {\n  //const [theme, setTheme] = useState('light'); \n  // if the theme is not light, then set it to dark\n  if (theme === 'light') {\n   // setTheme('dark');\n    console.log('dark')\n  // otherwise, it should be light\n  } else {\n  //  setTheme('light');\n    console.log('light')\n  }\n} */","map":{"version":3,"sources":["/Users/bahdana/Desktop/react-pluralsight/my-app/github_search/src/App.js"],"names":["React","CardList","testData","Form","Darkmode","App","Component","state","profiles","theme","addNewProfile","profileData","setState","prevState","render","props","title","ToggleTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,IAArB;AACA,eAAe,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE/CC,KAF+C,GAEvC;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,KAAK,EAAC;AAFA,KAFuC;;AAAA,SAQ/CC,aAR+C,GAQ9BC,WAAD,IAAiB;AAC/B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAACL,QAAAA,QAAQ,EAAE,CAAC,GAAGK,SAAS,CAACL,QAAd,EAAuBG,WAAvB;AAAX,OAAL,CAAvB;AACD,KAV8C;AAAA;;AAYjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEG,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,8BACP;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,wBAA0B,KAAKC,KAAL,CAAWC,KAArC,oBAA4C;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCAC5C;AAAQ,YAAA,SAAS,EAAC,UAAlB;AAA6B,YAAA,OAAO,EAAE,KAAKC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD4C;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADO,eAKL,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKP;AAArB;AAAA;AAAA;AAAA;AAAA,cALK,eAML,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cANK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AASD;;AA/B8C;AAkCjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport CardList from './CardList';\nimport testData from './testData';\nimport Form from './Form';\n//import { useState } from 'react';\nimport Darkmode from './'\nexport default class App extends React.Component {\n \n  state = {\n    profiles:[],\n    theme:true\n  };\n  //ToggleTheme = this.ToggleTheme.bind(this);\n  \n  addNewProfile = (profileData) => {\n    this.setState(prevState => ({profiles: [...prevState.profiles,profileData]}))\n  }\n\n/*ToggleTheme () {\n  if (theme === true) {\n    this.setState({theme:false})\n    console.log('dark')\n  }\n  else \n  this.setState({theme:true})\n  console.log('light')\n} */\n  render() { \n    return <div>\n    <div className=\"header\"> {this.props.title} <div className=\"modeWrapper\">\n    <button className=\"darkMode\" onClick={this.ToggleTheme}>Dark</button>\n    </div>\n    </div> \n      <Form onSubmit={this.addNewProfile}/>\n      <CardList profiles={this.state.profiles}/> \n      \n      </div>\n  }\n}\n\n/*const DarkMode = () => {\n  return ( <div>\n<button className=\"darkMode\" onClick={ToggleTheme}>Dark</button>\n</div> )\n}; */\n\n/*function ToggleTheme () {\n  //const [theme, setTheme] = useState('light'); \n  // if the theme is not light, then set it to dark\n  if (theme === 'light') {\n   // setTheme('dark');\n    console.log('dark')\n  // otherwise, it should be light\n  } else {\n  //  setTheme('light');\n    console.log('light')\n  }\n} */"]},"metadata":{},"sourceType":"module"}